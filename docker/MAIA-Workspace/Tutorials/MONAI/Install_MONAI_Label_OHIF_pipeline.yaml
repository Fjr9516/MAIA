# PIPELINE DEFINITION
# Name: install-monai-label-ohif-pipeline
# Inputs:
#    cluster_api: str
#    id_token: str
#    namespace: str
#    user_id: str
components:
  comp-helm-install-monai-label-ohif:
    executorLabel: exec-helm-install-monai-label-ohif
    inputDefinitions:
      parameters:
        cluster_api:
          parameterType: STRING
        id_token:
          parameterType: STRING
        namespace:
          parameterType: STRING
        user_id:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-helm-install-monai-label-ohif:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - helm_install_monai_label_ohif
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.10.1'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef helm_install_monai_label_ohif(cluster_api: str,namespace: str,\
          \ user_id: str, id_token: str):\n\n    import subprocess\n    from pathlib\
          \ import Path\n    import os\n    import yaml\n    def generate_kubeconfig(id_token,user_id,namespace,cluster_api):\n\
          \        kube_config = {'apiVersion': 'v1', 'kind': 'Config', 'preferences':\
          \ {},\n                           'current-context': 'MAIA/{}'.format(user_id),\
          \ 'contexts': [\n                    {'name': 'MAIA/{}'.format(user_id),\n\
          \                     'context': {'user': user_id, 'cluster': 'MAIA', 'namespace':\
          \ namespace}}],\n                           'clusters': [\n            \
          \                   {'name': 'MAIA', 'cluster': {'certificate-authority-data':\
          \ \"\",\n                                                            'server':\
          \ cluster_api,\n\n                                                     \
          \       \"insecure-skip-tls-verify\": True}}],\n                       \
          \    \"users\": [{'name': user_id,\n                                   \
          \   'user': {'token': id_token}}]}\n        return kube_config\n\n    kubeconfig_dict\
          \ = generate_kubeconfig(id_token,user_id,namespace,cluster_api)\n\n    with\
          \ open(Path(\".\").joinpath(\"kubeconfig\"), \"w\") as f:\n        yaml.dump(kubeconfig_dict,\
          \ f)\n    os.environ[\"KUBECONFIG\"] = \"kubeconfig\"\n    subprocess.run([\"\
          helm\",\"repo\",\"add\",\"maia\",\"https://kthcloud.github.io/MAIA/\"])\n\
          \    subprocess.run([\"helm\",\"repo\",\"update\"])\n    subprocess.run([\"\
          helm\", \"install\", \n                    \"spleen-segmentation\",\n  \
          \                  \"-n\", namespace,\n                    \"maia/monai-label-ohif-maia\"\
          ,\n                    \"--set\", \"hostname=monai-demo.maia.cloud.cbh.kth.se\"\
          ,\n                    \"--set\", \"pvc.pvc_type=nfs\",\n              \
          \      \"--set\", \"bundle_model_name=Task09_Spleen_Bundle\",\n        \
          \            \"--set\", \"mlflow_pvc_name=shared\",\n                  \
          \  \"--set\", \"mlflow_model_path=/workspace/mlflow-models/Task09_Spleen\"\
          ,\n                   ])\n\n"
        image: kthcloud/maia-workspace-admin:1.5
pipelineInfo:
  name: install-monai-label-ohif-pipeline
root:
  dag:
    tasks:
      helm-install-monai-label-ohif:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-helm-install-monai-label-ohif
        inputs:
          parameters:
            cluster_api:
              componentInputParameter: cluster_api
            id_token:
              componentInputParameter: id_token
            namespace:
              componentInputParameter: namespace
            user_id:
              componentInputParameter: user_id
        taskInfo:
          name: helm-install-monai-label-ohif
  inputDefinitions:
    parameters:
      cluster_api:
        parameterType: STRING
      id_token:
        parameterType: STRING
      namespace:
        parameterType: STRING
      user_id:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.10.1
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-helm-install-monai-label-ohif:
          imagePullSecret:
          - secretName: harbor-maia-docker-registry-secret
