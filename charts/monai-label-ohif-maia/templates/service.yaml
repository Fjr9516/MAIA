kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
      name: pt-monai-label
    - protocol: TCP
      port: 81
      targetPort: 80
      name: pt-orthanc
      #  NodePort: XXXXX
  type: ClusterIP
  selector:
    app-name: {{ .Release.Name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  #annotations:
  #  cert-manager.io/cluster-issuer: go-deploy-cluster-issuer
  #  nginx.ingress.kubernetes.io/proxy-body-size: 500m
  #  nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  tls:
    - hosts:
        - {{ .Values.hostname}}
      secretName: {{ .Release.Name }}-tls
  rules:
  - host: {{ .Values.hostname}}
    http:
      paths:
      - path: {{ printf "/%s" .Release.Name }}-monai-label
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ .Release.Name }}
            port:
              name: pt-monai-label
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-orthanc
  #annotations:
  #  cert-manager.io/cluster-issuer: go-deploy-cluster-issuer
  #  nginx.ingress.kubernetes.io/proxy-body-size: 500m
  #  nginx.ingress.kubernetes.io/enable-cors: "true"
  #  nginx.ingress.kubernetes.io/auth-signin: https://{{.Values.oauth_url}}/oauth2/start?rd=https://$host$uri
  #  nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.{{.Values.namespace}}.svc.cluster.local:80/oauth2/auth
spec:
  tls:
    - hosts:
        - {{ .Values.hostname}}
      secretName: {{ .Release.Name }}-tls
  rules:
  - host: {{ .Values.hostname}}
    http:
      paths:
      - path: {{ printf "/%s" .Release.Name }}
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ .Release.Name }}
            port:
              name: pt-orthanc