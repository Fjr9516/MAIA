apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "maiakubegate-kaniko.fullname" . }}
  labels:
    {{- include "maiakubegate-kaniko.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  {{- end }}
  ttlSecondsAfterFinished: 120
  backoffLimit: 0
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "maiakubegate-kaniko.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - '--dockerfile=Dockerfile'
          #- "--context=s3://docker-contexts/{{.Values.context_file}}"
          - '--context=git://'{{.Values.git_path }}
          - '--context-sub-path='{{.Values.git_subpath }}
          -  "--destination={{.Values.docker_image}}"
          {{- range $key, $value := .Values.buildArgs }}
          - "--build-arg="{{ $key }}={{ $value }}{{ if not (last $key $value) }} {{ end }}
          {{- end }}
          - "--cache=true"
          - "--cache-dir=/cache"
          env:
            - name: GIT_USERNAME
              value: {{.Values.git_username }}
            - name: GIT_PASSWORD
              value: {{.Values.git_token }}
            #- name: AWS_ACCESS_KEY_ID
            #  value: {{.Values.MINIO_ACCESS_KEY}}
            #- name: AWS_SECRET_ACCESS_KEY
            #  value: {{.Values.MINIO_SECRET_KEY}}
            #- name: AWS_REGION
            #  value: us-east-1
            #- name: S3_ENDPOINT
            #  value: {{.Values.MINIO_URL}}
            #- name: S3_FORCE_PATH_STYLE
            #  value: "true"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: docker-config
              mountPath: /kaniko/.docker
            - name: cache
              mountPath: /cache
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: kaniko-cache-pvc-{{ include "maiakubegate-kaniko.fullname" . }}
        - name: docker-config
          projected:
            sources:
              - secret:
                  name: {{.Values.docker_registry_secret}}
                  items:
                    - key: .dockerconfigjson
                      path: config.json
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kaniko-cache-pvc-{{ include "maiakubegate-kaniko.fullname" . }}
  labels:
   {{- include "maiakubegate-kaniko.labels" . | nindent 4 }}
spec:
  storageClassName: {{ .Values.pvc.pvc_type }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.pvc.size }}